{"version":3,"sources":["components/Coin/Coin.jsx","components/Coinlist/Coinlist.jsx","components/AccountsBalance/AccountsBalance.jsx","logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["TD","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","Coinlist","coinData","map","key","Section","section","BtnBalance","button","AccountsBalance","buttonText","content","amount","handleShowHide","Img","img","Header","header","H1","h1","ExchangeHeader","src","logo","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerURL","newPrice","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIMA,EAAKC,IAAOC,GAAV,iFAKO,SAASC,EAAKC,GAQrB,OACI,+BACI,cAACJ,EAAD,UAAKI,EAAMC,OACX,cAACL,EAAD,UAAKI,EAAME,SACX,eAACN,EAAD,eAAMI,EAAMG,SACXH,EAAMI,YAAc,cAACR,EAAD,UAAKI,EAAMK,UAAgB,KAChD,cAACT,EAAD,UACI,sBAAMU,OAAO,IAAIC,OAAO,OAAxB,SACI,wBAAQC,QAdR,SAACC,GAEbA,EAAMC,iBAENV,EAAMW,cAAcX,EAAMY,WAUd,4BCrBxB,I,IAAMC,EAAQhB,IAAOiB,MAAV,oHAOI,SAASC,EAASf,GAE3B,IAAMK,EAAUL,EAAMI,YAAc,yCAAmB,KACrD,OAEO,eAACS,EAAD,WACL,gCACE,+BACE,sCACA,wCACA,uCACCR,EACD,8CAGJ,gCAEIL,EAAMgB,SAASC,KAAK,gBAAEC,EAAF,EAAEA,IAAKjB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQG,EAArB,EAAqBA,QAASF,EAA9B,EAA8BA,MAA9B,OACpB,cAACJ,EAAD,CACMY,cAAeX,EAAMW,cACrBV,KAAMA,EACNC,OAAQA,EACRG,QAASA,EACTD,YAAaJ,EAAMI,YACnBD,MAAOA,EACPS,SAAUM,GAPLA,WCxBzB,IAAMC,EAAUtB,IAAOuB,QAAV,4IAOPC,EAAaxB,IAAOyB,OAAV,6MAYD,SAASC,EAAgBvB,GAEpC,IAAMwB,EAAaxB,EAAMI,YAAc,eAAiB,eACpDqB,EAAU,KAKd,OAJIzB,EAAMI,cACNqB,EAAU,kDAAazB,EAAM0B,WAIjC,eAACP,EAAD,WACCM,EACD,cAACJ,EAAD,CAAYb,QAASR,EAAM2B,eAA3B,SAA4CH,O,4CCnCjC,MAA0B,iCCInCI,EAAM/B,IAAOgC,IAAV,mEAKFC,EAASjC,IAAOkC,OAAV,iNAUNC,EAAKnC,IAAOoC,GAAV,mDAOYC,E,4JACjB,WACI,OACI,eAACJ,EAAD,WACF,cAACF,EAAD,CAAKO,IAAKC,IACR,cAACJ,EAAD,mC,GALgCK,a,gBChBtCC,EAAMzC,IAAO0C,IAAV,8GAOHC,EAAc,SAAArC,GAAK,OAAIsC,WAAWC,OAAOvC,GAAOwC,QAAQ,KA2E/CC,MAzEf,SAAa5C,GAAQ,IAAD,EACY6C,mBAAS,KADrB,mBACXxC,EADW,aAEoBwC,oBAAS,IAF7B,mBAEXzC,EAFW,KAEE0C,EAFF,OAGcD,mBAAS,IAHvB,mBAGX7B,EAHW,KAGD+B,EAHC,KAKZC,EAAiB,uCAAG,oCAAAC,EAAA,sEACHC,IAAMC,IAAI,wCADP,cACpBC,EADoB,OAGpBC,EAAUD,EAASE,KAAKC,MAAM,EAXpB,GAWkCtC,KAAI,SAAAuC,GAAI,OAAIA,EAAKC,MACjD,0CACZC,EAAWL,EAAQpC,KAAI,SAACwC,GAAD,OAAQP,IAAMC,IADzB,0CACyCM,MALjC,SAMHE,QAAQC,IAAIF,GANT,OAMpB1C,EANoB,OAOpB6C,EAAgB7C,EAASC,KAAI,SAASmC,GAC1C,IAAMI,EAAOJ,EAASE,KACtB,MAAO,CACLpC,IAAKsC,EAAKC,GACVxD,KAAMuD,EAAKvD,KACXC,OAAQsD,EAAKM,OACbzD,QAAS,EACTF,MAAOqC,EAAYgB,EAAKO,OAAOC,IAAI7D,WAIvC4C,EAAYc,GAlBc,4CAAH,qDAsBxBI,qBAAU,WAEc,IAApBjD,EAASkD,QACVlB,OAKF,IAKMrC,EAAa,uCAAG,WAAOwD,GAAP,qBAAAlB,EAAA,6DACdmB,EADc,iDACwCD,GADxC,SAEGjB,IAAMC,IAAIiB,GAFb,OAEdhB,EAFc,OAIdiB,EAAW7B,EAAYY,EAASE,KAAKS,OAAOC,IAAI7D,OAChDmE,EAActD,EAASC,KAAI,SAAWsD,GAC1C,IAAIC,EAAS,eAAQD,GAIrB,OAHCJ,IAAkBK,EAAUtD,MAC7BsD,EAAUrE,MAAQkE,GAEXG,KAITzB,EAAYuB,GAdQ,2CAAH,sDAgBjB,OACE,eAAChC,EAAD,WACE,cAAC,EAAD,IACA,6BAAI,cAACf,EAAD,CAAiBG,OAAQrB,EACRD,YAAaA,EACbuB,eA1BJ,WACrBmB,GAAe,SAAA2B,GAAQ,OAAKA,UA4BxB,cAAC1D,EAAD,CAAUC,SAAYA,EACZZ,YAAaA,EACbO,cAAeA,QCzElB+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f6bfb70.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst TD = styled.td` {\r\n    border: 1px solid #cccccc;\r\n    width: 25vh;\r\n}`;\r\n\r\nexport default function Coin(props){\r\n    \r\n    const handleClick = (event) => {\r\n            //Prevent default action of submitting the form\r\n            event.preventDefault();\r\n            //when call (f.e. by button) Passes this.props.ticker to the handleRefresh function in App.js. App.js is inheriting Coinlist.jsx which is inheriting Coin.jsx\r\n            props.handleRefresh(props.tickerId);\r\n    }      \r\n        return (\r\n            <tr>\r\n                <TD>{props.name}</TD>\r\n                <TD>{props.ticker}</TD>\r\n                <TD>${props.price}</TD>\r\n                {props.showBalance ? <TD>{props.balance}</TD> : null}\r\n                <TD>\r\n                    <form action=\"#\" method=\"POST\">\r\n                        <button onClick={handleClick}>Refresh</button>\r\n                    </form>\r\n                </TD>\r\n            </tr>  \r\n        );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}","import React from 'react'\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n    margin: 50px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1.4rem;\r\n\r\n`;\r\n\r\nexport default function Coinlist(props){\r\n  \r\n      const balance = props.showBalance ? <th>Balance</th> : null;\r\n        return (\r\n          \r\n               <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Ticker</th>\r\n              <th>Price</th>\r\n              {balance}\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.coinData.map( ({key, name, ticker, balance, price}) =>\r\n              <Coin key={key} \r\n                    handleRefresh={props.handleRefresh}\r\n                    name={name} \r\n                    ticker={ticker} \r\n                    balance={balance}\r\n                    showBalance={props.showBalance}\r\n                    price={price}\r\n                    tickerId={key} />  \r\n              )\r\n            }\r\n          </tbody>\r\n        </Table> \r\n     \r\n        )\r\n}\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    border: 1px solid red;\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0rem 1.5rem 5rem;\r\n`;\r\n\r\nconst BtnBalance = styled.button`\r\n    font-size: 1.4rem;\r\n    margin: 1.5rem 0 1.5rem 5rem;\r\n    background-color: rgb(20, 56, 97);\r\n    color: #cccccc;\r\n    border: 1px solid #cccccc;\r\n    border-radius: 7px;\r\n`;\r\n\r\n\r\n\r\n\r\nexport default function AccountsBalance(props){\r\n  \r\n    const buttonText = props.showBalance ? \"Hide Balance\" : \"Show Balance\";\r\n    let content = null;\r\n    if (props.showBalance){\r\n        content = <>Balance: ${props.amount}</>;\r\n    }\r\n\r\n    return (    \r\n    <Section>\r\n    {content}\r\n    <BtnBalance onClick={props.handleShowHide}>{buttonText}</BtnBalance>\r\n    </Section>  \r\n    );\r\n}\r\n\r\n\r\nAccountsBalance.propTypes = {\r\n\r\n    amount: PropTypes.number\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from '../../logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Img = styled.img`\r\nheight: 8vmin;\r\npointer-events: none;\r\n`; \r\n\r\n const Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n `;\r\n\r\n const H1 = styled.h1`\r\n    font-size: 4rem;\r\n `;\r\n  \r\n\r\n\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n          <Img src={logo}></Img>\r\n            <H1>Coin Exchange</H1>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n\nimport Coinlist from './components/Coinlist/Coinlist';\nimport AccountsBalance from './components/AccountsBalance/AccountsBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\n\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Div = styled.div`\ntext-align: center;\nbackground-color: rgba(11, 11, 114, 0.938);\ncolor: #cccccc\n`;\n\nconst coinCount = 9;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n  const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n\n  const coinIds = response.data.slice(0, coinCount).map(coin => coin.id); \n  const tickerURL = 'https://api.coinpaprika.com/v1/tickers/';\n  const promises = coinIds.map((id) => axios.get(tickerURL + id));\n  const coinData = await Promise.all(promises);\n  const coinPriceData = coinData.map(function(response) {\n    const coin = response.data;\n    return {\n      key: coin.id,\n      name: coin.name,\n      ticker: coin.symbol,\n      balance: 0,\n      price: formatPrice(coin.quotes.USD.price),\n    }\n  })\n  //Retrieve prices here\n  setCoinData(coinPriceData);\n  }\n\n  \n useEffect(function() {\n\n  if(coinData.length === 0){\n    componentDidMount();\n  }\n});\n\n\n  const handleShowHide = () => {\n    setShowBalance(oldValue => !oldValue);\n   }\n   \n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerURL = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}` ;\n    const response = await axios.get(tickerURL);\n    debugger;\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map(function ( values ) {  //input argument is 1 object {} with a ticker, name and price\n      let newValues = { ...values };\n    if(valueChangeId === newValues.key) {\n      newValues.price = newPrice;\n    }\n      return newValues;\n    });\n    \n   \n    setCoinData(newCoinData);\n  }\n    return (\n      <Div>\n        <ExchangeHeader />\n        <h2><AccountsBalance amount={balance} \n                             showBalance={showBalance}\n                             handleShowHide={handleShowHide} \n            />\n        </h2>\n        <Coinlist coinData = {coinData} \n                  showBalance={showBalance}\n                  handleRefresh={handleRefresh} \n        />\n      </Div>\n    );\n \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}